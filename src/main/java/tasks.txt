Пакет bank.
1. Реализовать логику банковского сервиса.
2. Написать unit тесты. Покрыть нужно все методы данного класса.
3. Проверки на null и пустоту строк делать не нужно. Подразумевается что сервис из вне защищен от таких случаев.
====================================================================================================================
Пакет list.
1. Посмотреть на иерархию классов.
2. Реализовать логику класса SortedLibraryService.
3. Реализовать логику класса Library.
4. Проверить unit тесты. Почитать что делают методы assertIterableEquals, что делает аннотация @BeforeEach.
5. Ответить по пункту 4 мне в ЛС телеграмма.
====================================================================================================================
Пакет map.
1. Реализовать логику класса CookieUtils. Посмотреть на реализацию остальных классов. Дать ответ мне в телеграмм
что такое ... в параметрах метода , в чем удобства его использования.
2. К данному классу написан unit тест. Концепт следующий.
Распарсить куку. В ответе должна быть Map, с ключом в виде названия куки и объектом Pair который содержит флаги кук
и саму куку.
Если у куки есть флаг Secure по умолчанию, то нужно добавить еще флаг HttpOnly.
Если у куки есть флаг Session по умолчанию, то нужно добавить еще флаг HttpOnly.
Если у куки нету никаких флагов, то добавить все 3 флага. HttpOnly, Secure, Session.
====================================================================================================================
Пакет matrix.
Реализовать логику класса Converter. Он должен преобразовывать квадратную матрицу в список. Написать unit тест.
====================================================================================================================
Пакет numbersbigandsmall.
Реализовать логику класса ConverterNumbers. Он должен вернуть список типов чисел.
Если число больше или равно 1000 вернуть BIG, если равно 0, вернуть ZERO, если что-то другое вернуть SMALL
====================================================================================================================
Пакет set.unuquenumbers.
Реализовать логику UniqueTerminal. Метод должен вернуть множество чисел отсортированных в обратном порядке.
Подразумевается что массив имеет только уникальные числа. Для решения задачи можно почитать про NavigableSet
====================================================================================================================
Пакет set.mathset
Реализовать все 4 операции над множествами.
====================================================================================================================

